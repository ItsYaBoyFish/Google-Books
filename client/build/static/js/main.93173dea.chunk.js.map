{"version":3,"sources":["components/Navbar/Navbar.js","components/SearchBox/SearchBox.js","components/BookCard/BookCard.js","components/DisplayResults/DisplayResults.js","components/BookSearch/BookSearch.js","components/BookCardSaved/BookCardSaved.js","components/DisplaySaved/DisplaySaved.js","components/BookSave/BookSave.js","App.js","index.js"],"names":["Navbar","className","to","SearchBox","props","onChange","handleSearchInput","type","placeholder","onClick","searchAPI","BookCard","state","ID","Title","Thumbnail","Authors","Description","saveButtonClicked","data","options","method","headers","body","JSON","stringify","fetch","then","json","message","console","log","catch","err","alert","key","this","src","alt","map","Author","index","Component","DisplayResults","books","book","BookSearch","search","e","setState","target","value","paramaters","results","Results","BookCardSaved","BookSave","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93173dea.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport \"./Navbar.css\"\nfunction Navbar() {\n  return (\n    <div className=\"navbar\">\n      <div className=\"brand\">\n        <h1>Google Books</h1>\n      </div>\n      <div className=\"nav-links\">\n        <span>\n          <Link to=\"/\">Search</Link>\n        </span>\n        <span>\n          <Link to=\"/Saved\">Saved</Link>\n        </span>\n      </div>\n    </div>\n  )\n}\n\nexport default Navbar;","import React from 'react';\nimport \"../SearchBox/SearchBox.css\";\n\nfunction SearchBox(props) {\n  return (\n    <div className=\"searchBox-container\">\n      <h1>Search For A Book!</h1>\n      <div className=\"input-field\">\n        <label>Book:</label>\n        <input onChange={props.handleSearchInput} type=\"text\" placeholder=\"Please Enter A Book: Example - Harry Potter\"/>\n      </div>\n      <button onClick={props.searchAPI}>Search!</button>\n    </div>\n  )\n}\n\nexport default SearchBox;","import React, { Component } from 'react';\nimport \"../BookCard/BookCard.css\";\n\n\nclass BookCard extends Component {\n  state = {\n    ID: this.props.ID,\n    Title: this.props.Title,\n    Thumbnail: this.props.Thumbnail,\n    Authors: this.props.Authors,\n    Description: this.props.Description\n  }\n\n\n  saveButtonClicked = () => {\n    const data = {\n      ID: this.state.ID,\n      Title: this.state.Title,\n      Authors: this.state.Authors,\n      Thumbnail: this.state.Thumbnail,\n      Description: this.state.Description\n    }\n\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }\n\n    fetch('/books/save', options)\n      .then(data => data.json())\n      .then(message => console.log(message))\n      .catch(err => console.log(err))\n\n      alert(\"Book Submitted!\")\n  }\n\n  render() {\n    return (\n      <div className=\"book-card\" key={this.state.ID}>\n        <div className=\"book-card-title\">\n          <label>Title:</label>\n          <p className=\"title-element\">{this.state.Title ? this.props.Title : 'No Title Provided'}</p>\n        </div>\n        <div className=\"book-card-img\">\n          <img src={this.state.Thumbnail} alt=\"thumbnail\"></img>\n        </div>\n        <div className=\"book-card-body\">\n          <div className=\"book-card-author\">\n            <label>Authors:</label>\n            <p>{this.state.Authors ? this.state.Authors.map((Author, index) => <span key={index}>{Author}, </span>)  : 'No Authors To Display'}</p>\n          </div>\n          <div className=\"book-card-description\">\n            <label>Description:</label>\n            <div className=\"book-card-description-container\">\n              <p>{this.state.Description ? this.state.Description : \"No Description Provided\"}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"save-button\" onClick={this.saveButtonClicked}>Save Book!</div>\n      </div>\n    )\n  }\n}\n\nexport default BookCard;\n\n// src=\"https://via.placeholder.com/200\"\n\n","import React, { Component } from 'react'\nimport \"../DisplayResults/DisplayResults.css\";\nimport BookCard from \"../BookCard/BookCard\";\n\nclass DisplayResults extends Component {\n\n  com\n\n  render() {\n    return (\n      <div className=\"results-container\">\n        <div className=\"results-header\">\n          {this.props.books.map(book => \n            <BookCard key={book.ID} Title={book.Title} Description={book.Description} Thumbnail={book.Thumbnail} Authors={book.Authors} saveButtonClicked={this.props.saveButtonClicked}/>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default DisplayResults;\n ","import React, { Component } from 'react';\nimport SearchBox from \"../SearchBox/SearchBox\";\nimport DisplayResults from \"../DisplayResults/DisplayResults\";\n\nclass BookSearch extends Component {\n\n  //TODO: I need the Link and Authors Data\n\n  state = {\n    books: [],\n    search: ''\n  }\n\n  // componentDidMount() {\n  //   fetch('/books')\n  //     .then(data => data.json())\n  //     .then(books => console.log(books))\n  //     .catch(err => console.log(err))\n  // }\n\n  handleSearchInput = (e) => {\n    this.setState({\n      search: e.target.value\n    })\n  }\n\n  searchAPI = (e) => {\n    const paramaters = {\n      search: this.state.search\n    }\n    const options = {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(paramaters)\n    };\n\n    fetch(`/search/books`, options)\n      .then(results => results.json())\n      .then(books => {\n        console.log(books)\n        this.setState({books: books.Results})\n      })\n      .catch(err => console.log(err))\n  }\n\n  saveButtonClicked= () => {\n    console.log('Button Clicked')\n  }\n\n  render() {  \n    return (\n      <div>\n        {/* <Jumbotron /> */}\n        <SearchBox searchAPI={this.searchAPI} handleSearchInput={this.handleSearchInput}/>\n        <DisplayResults saveButtonClicked={this.saveButtonClicked} books={this.state.books}/>\n        \n      </div>\n    )\n  }\n}\n\nexport default BookSearch;\n\n\n","import React, { Component } from 'react';\nimport \"../BookCardSaved/BookCard.css\";\n\n\nclass BookCardSaved extends Component {\n  state = {\n    ID: this.props.ID,\n    Title: this.props.Title,\n    Thumbnail: this.props.Thumbnail,\n    Authors: this.props.Authors,\n    Description: this.props.Description\n  }\n\n\n  // saveButtonClicked = () => {\n  //   const data = {\n  //     ID: this.state.ID,\n  //     Title: this.state.Title,\n  //     Authors: this.state.Authors,\n  //     Thumbnail: this.state.Thumbnail,\n  //     Description: this.state.Description\n  //   }\n\n  //   const options = {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\"\n  //     },\n  //     body: JSON.stringify(data)\n  //   }\n\n  //   fetch('/books/save', options)\n  //     .then(data => data.json())\n  //     .then(message => console.log(message))\n  //     .catch(err => console.log(err))\n\n  //     alert(\"Book Submitted!\")\n  // }\n\n  render() {\n    return (\n      <div className=\"book-card\" key={this.state.ID}>\n        <div className=\"book-card-title\">\n          <label>Title:</label>\n          <p className=\"title-element\">{this.state.Title ? this.props.Title : 'No Title Provided'}</p>\n        </div>\n        <div className=\"book-card-img\">\n          <img src={this.state.Thumbnail} alt=\"thumbnail\"></img>\n        </div>\n        <div className=\"book-card-body\">\n          <div className=\"book-card-author\">\n            <label>Authors:</label>\n            <p>{this.state.Authors ? this.state.Authors.map((Author, index) => <span key={index}>{Author}, </span>)  : 'No Authors To Display'}</p>\n          </div>\n          <div className=\"book-card-description\">\n            <label>Description:</label>\n            <div className=\"book-card-description-container\">\n              <p>{this.state.Description ? this.state.Description : \"No Description Provided\"}</p>\n            </div>\n          </div>\n        </div>\n        {/* <div className=\"save-button\" onClick={this.saveButtonClicked}>Save Book!</div> */}\n      </div>\n    )\n  }\n}\n\nexport default BookCardSaved;\n\n// src=\"https://via.placeholder.com/200\"\n\n","import React from 'react'\nimport \"../DisplaySaved/DisplaySaved.css\"\nimport BookCardSaved from \"../BookCardSaved/BookCardSaved\"\n\nfunction DisplayResults(props) {\n  return (\n    <div className=\"saved-container\">\n      {props.books.map((book, index) => \n        <BookCardSaved key={index} Title={book.Title} Description={book.Description} Thumbnail={book.Thumbnail} Authors={book.Authors} />\n      )}\n    </div>\n  )\n}\n\nexport default DisplayResults;","import React, { Component } from 'react';\nimport DisplaySaved from \"../DisplaySaved/DisplaySaved\";\n\nclass BookSave extends Component {\n  state = {\n    books: []\n  }\n\n  componentDidMount() {\n    fetch('/saved/books')\n      .then(data => data.json())\n      .then(books => {\n        this.setState({books: books})\n      })\n      .catch(err => console.log(err))\n  }\n  render() {\n    return (\n      <div>\n        <DisplaySaved books={this.state.books}/>\n      </div>\n    )\n  }\n}\n\nexport default BookSave;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"; \nimport Navbar from \"./components/Navbar/Navbar\"\nimport BookSearch from \"./components/BookSearch/BookSearch\";\nimport BookSave from \"./components/BookSave/BookSave\";\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Navbar />\n        <Route exact path=\"/\" component={BookSearch} />\n        <Route exact path=\"/Saved\" component={BookSave} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}